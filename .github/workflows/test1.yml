name: Generate and Send QR Code

on:
  workflow_call:
    inputs:
      pr_number:
        required: true
        type: number

jobs:
  generate-and-send-qr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: refs/pull/${{ inputs.pr_number }}/merge

      - name: Show PR number
        run: "echo 'PR number: ${{ inputs.pr_number }}'"

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm ci
          npm install -g @expo/ngrok@^4.1.0
          pip install subprocess.run

      - name: Start Expo server
        run: |
          npx expo start --no-dev --clear --tunnel 2>&1 | tee expo.log &
          echo $! > expo.pid
          sleep 30 # Attendre que le serveur d√©marre
        env:
          CI: false
          EXPO_DEBUG: true

      - name: Extract Expo URL
        run: |
          expo_url=$(grep -oP '(?<=URL: ).*' expo.log | tail -n 1)
          echo "EXPO_URL=$expo_url" >> $GITHUB_ENV

      - name: Display Expo URL
        run: |
          echo "Expo URL: ${{ env.EXPO_URL }}"

      - name: Generate QR Code
        run: |
          sudo apt-get update && sudo apt-get install -y qrencode
          qrencode -o qr_code.png "${{ env.EXPO_URL }}"

      - name: Upload QR Code to PR
        uses: actions/upload-artifact@v3
        with:
          name: qr-code
          path: qr_code.png

      - name: Comment on PR with QR Code
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            const { owner, repo } = context.repo;
            const prNumber = ${{ inputs.pr_number }};
            
            const qrCodeBase64 = fs.readFileSync('qr_code.png', { encoding: 'base64' });
            
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: prNumber,
              body: `## QR Code for Expo App\n\n![QR Code](data:image/png;base64,${qrCodeBase64})`
            });

      
      - name: wait
        run: sleep 1000
