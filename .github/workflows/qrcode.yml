name: Create QR Code Workflow for PR

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request Number'
        required: true
        type: string
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read  # Réduit à 'read' pour une meilleure sécurité
      actions: read   # Réduit à 'read' si 'write' n'est pas indispensable
    steps:
      - name: Get PR Number
        id: pr
        run: |
          if [ ! -z "${{ github.event.pull_request.number }}" ]; then
            echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          else
            echo "PR_NUMBER=${{ inputs.pr_number }}" >> $GITHUB_ENV

      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ env.PR_NUMBER }}/head
          fetch-depth: 0

      - name: Setup Node.js and dependencies
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies and expo tools
        run: |
          npm ci
          npm install -g @expo/ngrok@^4.1.0
        env:
          NODE_ENV: production  # Pour une installation optimisée

      - name: Start Expo server with logs
        run: |
          nohup npx expo start --no-dev --clear --tunnel > expo.log 2>&1 &
          echo "Expo server started, waiting for it to be ready..."
          sleep 20
          if ! grep -q 'Tunnel ready' expo.log; then
            echo "Expo server did not start correctly. Check expo.log for details."
            exit 1
          fi
        env:
          EXPO_DEBUG: true

      - name: Extract and Display Expo URL
        run: |
          expo_url=$(grep -oP '(?<=URL: ).*' expo.log | tail -n 1)
          if [ -z "$expo_url" ]; then
            echo "Failed to extract Expo URL"
            exit 1
          fi
          echo "Extracted Expo URL: $expo_url"
          echo "EXPO_URL=$expo_url" >> $GITHUB_ENV

      - name: Install qrencode and Generate QR Code
        run: |
          sudo apt-get update -qq && sudo apt-get install -y qrencode
          qrencode -o "qr_code_pr${{ env.PR_NUMBER }}.png" "${{ env.EXPO_URL }}"
        env:
          DEBIAN_FRONTEND: noninteractive  # Accélère l'installation

      - name: Serve QR Code via HTTP
        run: |
          mkdir -p public
          mv qr_code_pr${{ env.PR_NUMBER }}.png public/
          cd public
          nohup npx http-server -p 8000 > ../http-server.log 2>&1 &
          sleep 10
          echo "HTTP server started."

      - name: Get Ngrok Public URL
        run: |
          nohup ngrok http 8000 > ngrok.log 2>&1 &
          sleep 15
          NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | grep -o '"public_url":"[^"]*' | grep -o 'http[^"]*' | head -1)
          if [ -z "$NGROK_URL" ]; then
            echo "Failed to get Ngrok public URL"
            exit 1
          fi
          echo "QR URL: $NGROK_URL/qr_code_pr${{ env.PR_NUMBER }}.png"
          echo "QR_URL=$NGROK_URL/qr_code_pr${{ env.PR_NUMBER }}.png" >> $GITHUB_ENV

      - name: PR comment with QR Code link
        uses: thollander/actions-comment-pull-request@v3
        with:
          message: |
            Voici le QR Code pour tester votre application Expo :
            ![QR Code](${{ env.QR_URL }})
            Et le lien de l'application Expo :
            ${{ env.EXPO_URL }}
            _(exécution **${{ github.run_id }}** / timestamp **$(date -u +'%d/%m/%Y à %H:%M:%S')**)_
          comment-tag: execution
          pr-number: ${{ env.PR_NUMBER }}

      - name: Optional Cleanup
        run: |
          echo "Cleaning up temporary files..."
          rm -rf public expo.log ngrok.log
